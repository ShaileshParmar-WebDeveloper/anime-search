{"version":3,"sources":["component/AnimeList.jsx","App.js","reportWebVitals.js","index.js"],"names":["AnimeList","results","className","map","i","title","image_url","score","url","src","alt","href","rel","target","apiRequest","search","a","api","fetch","then","res","json","App","useState","animeSearch","setanimeSearch","apiData","setApiData","gotData","setgotData","dataLoading","setdataLoading","handleSubmite","event","preventDefault","data","onSubmit","type","value","onChange","e","placeholder","onClick","status","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAuBeA,EAvBG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OACE,qBAAKC,UAAU,kBAAf,SACGD,EAAQE,KAAI,WAAmCC,GAAnC,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAWC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,IAA5B,OACX,sBAAaN,UAAU,aAAvB,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKO,IAAKH,EAAWI,IAAKL,MAE5B,gCACE,4BAAIA,IACJ,wCAAWE,KACX,mBAAGL,UAAU,YAAb,SACE,mBAAGS,KAAMH,EAAKI,IAAI,aAAaC,OAAO,SAAtC,8BARIT,SCAZU,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACXC,EADW,kDACsCF,GADtC,SAEJG,MAAMD,GAAKE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAFzB,mFAAH,sDA2DDC,MAtDf,WAAgB,IAAD,EACyBC,mBAAS,IADlC,mBACNC,EADM,KACOC,EADP,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGiBJ,oBAAS,GAH1B,mBAGNK,EAHM,KAGGC,EAHH,OAIyBN,oBAAS,GAJlC,mBAINO,EAJM,KAIOC,EAJP,KAMPC,EAAa,uCAAG,WAAOC,GAAP,eAAAjB,EAAA,6DACpBiB,EAAMC,iBACNL,GAAW,GACXE,GAAe,GAHK,SAIDjB,EAAWU,GAAaL,MAAK,SAACC,GAAD,OAASA,KAJrC,OAIde,EAJc,OAKpBR,EAAWQ,GACXJ,GAAe,GACfN,EAAe,IAPK,2CAAH,sDAkBnB,OACE,sBAAKvB,UAAU,MAAf,UACE,8CACA,uBAAMkC,SAAUJ,EAAe9B,UAAU,SAAzC,UACE,uBACEmC,KAAK,OACLC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAee,EAAE3B,OAAOyB,QACzCG,YAAY,kCAEd,wBACEvC,UAAU,YACVmC,KAAK,QACLK,QAAS,kBAAMjB,EAAe,KAHhC,eAOA,wBAAQY,KAAK,SAAb,mBAEDT,EACC,iEACEE,EACF,qDA7BAJ,EAAQiB,OACH,6BAAKjB,EAAQkB,UAEb,cAAC,EAAD,CAAW3C,QAAO,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAASzB,cCjB3B4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a775a051.chunk.js","sourcesContent":["const AnimeList = ({ results }) => {\r\n  return (\r\n    <div className=\"anime_container\">\r\n      {results.map(({ title, image_url, score, url }, i) => (\r\n        <div key={i} className=\"anime_card\">\r\n          <div className=\"img_container\">\r\n            <img src={image_url} alt={title} />\r\n          </div>\r\n          <div>\r\n            <p>{title}</p>\r\n            <p>score: {score}</p>\r\n            <p className=\"know_more\">\r\n              <a href={url} rel=\"noreferrer\" target=\"_blank\">\r\n                Know More\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimeList;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport AnimeList from \"./component/AnimeList\";\n\nconst apiRequest = async (search) => {\n  const api = `https://api.jikan.moe/v3/search/anime?q=${search}`;\n  return await fetch(api).then((res) => res.json());\n};\n\nfunction App() {\n  const [animeSearch, setanimeSearch] = useState(\"\");\n  const [apiData, setApiData] = useState({});\n  const [gotData, setgotData] = useState(true);\n  const [dataLoading, setdataLoading] = useState(false);\n\n  const handleSubmite = async (event) => {\n    event.preventDefault();\n    setgotData(false);\n    setdataLoading(true);\n    const data = await apiRequest(animeSearch).then((res) => res);\n    setApiData(data);\n    setdataLoading(false);\n    setanimeSearch(\"\");\n  };\n\n  const displayResult = () => {\n    if (apiData.status) {\n      return <h2>{apiData.message}</h2>;\n    } else {\n      return <AnimeList results={apiData?.results} />;\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Anime Search</h1>\n      <form onSubmit={handleSubmite} className=\"search\">\n        <input\n          type=\"text\"\n          value={animeSearch}\n          onChange={(e) => setanimeSearch(e.target.value)}\n          placeholder=\"Search for anime, e.g Pokemon\"\n        />\n        <button\n          className=\"typeReset\"\n          type=\"reset\"\n          onClick={() => setanimeSearch(\"\")}\n        >\n          X\n        </button>\n        <button type=\"submit\">Go</button>\n      </form>\n      {gotData ? (\n        <h2>Search for Anime to see results</h2>\n      ) : dataLoading ? (\n        <h2>Data is loading...!</h2>\n      ) : (\n        displayResult()\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}